{"version":3,"sources":["Components/Layout/Header.js","Components/CalenderItem.js","Components/FormComponent.js","Components/TaskInfo.js","Components/UpdateInfo.js","Components/CalenderBase.js","App.js","index.js"],"names":["headerStyle","width","height","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","CalenderItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getColour","priority","getStyle","flex","borderRadius","backgroundColor","fontSize","cursor","inherits","createClass","key","value","_this2","className","props","tasks","map","task","onClick","handleClick","bind","id","name","day","description","Component","FormComponent","state","timeFormVisible","handleChange","event","onFormChange","target","handleSubmit","onFormSubmit","preventDefault","toggleTimeVisible","newState","setState","assertThisInitialized","onSubmit","form","month","onChange","months","taskName","maxLength","type","days","TaskInfo","info","handleDelete","UpdateInfo","onUpdateSubmit","monthName","CalenderBase","startTime","endTime","hidden","formHidden","taskInfoHidden","updateInfoHidden","updateChange","parseInt","console","log","addTask","toggleOff","resetForm","toggleForm","toggleInfo","getDayTasks","dayTasks","i","push","removeEmptyDays","newArray","createTableRows","today","Date","rows","j","getMonth","getDate","data-date","Components_CalenderItem","taskDelete","updateSubmit","updateTask","changeMonth","paddingTop","getFullYear","Button","Components_FormComponent","Components_TaskInfo","Components_UpdateInfo","App","require","createCalender","year","dayCount","firstDay","getDay","lastDay","toString","monthNames","grabTasks","fetch","then","responce","json","result","idList","recordset","date","separateDate","includes","eventId","eventName","eventDescription","current","setCurrentMonth","date1","direction","index","Number","location","next","taskInfo","data","checkTime","combineDate","method","headers","Content-Type","body","JSON","stringify","response","status","Error","text","catch","err","time","dayString","numberMonth","temp","splice","getMonths","test","Layout_Header","Components_CalenderBase","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.02130c7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Calender</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/About\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    width: '100%',\r\n    height: '10vh',\r\n    background: '#333',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n}\r\n\r\nconst linkStyle = {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n    \r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\nimport './Css/CalenderItem.css'\r\n\r\nexport class CalenderItem extends Component {\r\n\r\n  \r\ngetColour = (priority) => {\r\n  switch (priority){\r\n    case \"High\":\r\n      return \"red\"\r\n    case \"Normal\":\r\n      return \"grey\"\r\n    default:\r\n      return \"blue\"\r\n  }\r\n}\r\n\r\n\r\n  getStyle = (priority) => {\r\n    return{\r\n      flex: '1 0 0',\r\n      width: '100%',\r\n      borderRadius: '5px',\r\n      backgroundColor: this.getColour(priority),\r\n      fontSize: '17px',\r\n      cursor: 'pointer'\r\n\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n        <div className=\"taskContainer\">\r\n        {this.props.tasks.map((task) => (\r\n          <div className=\"gaps\">\r\n            <button style={this.getStyle(task.priority)} onClick={this.props.handleClick.bind(this, task.id, task.name, task.day, task.priority, task.description)}>{task.name}</button>\r\n          </div>\r\n          \r\n        ))}\r\n        </div>\r\n\r\n      \r\n      \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default CalenderItem\r\n","import React, { Component } from \"react\";\r\nimport \"./Css/FormComponent.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport class FormComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  state = {\r\n    timeFormVisible: false,\r\n  };\r\n  handleChange = (event) => {\r\n    this.props.onFormChange(event.target.name, event.target.value);\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    this.props.onFormSubmit();\r\n    event.preventDefault();\r\n  };\r\n\r\n  toggleTimeVisible = () => {\r\n    var newState = this.state;\r\n    if (this.state.timeFormVisible === true) {\r\n      newState.timeFormVisible = false;\r\n    } else {\r\n      newState.timeFormVisible = true;\r\n    }\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formContainer\" onSubmit={this.handleSubmit}>\r\n        <form>\r\n          <p></p>\r\n          {\r\n            <label style={{ fontSize: \"20px\" }}>\r\n              Month:\r\n              <select\r\n                name=\"month\"\r\n                value={this.props.form.month}\r\n                style={{ fontSize: \"20px\" }}\r\n                onChange={this.handleChange}\r\n              >\r\n                {this.props.months().map((month) => (\r\n                  <option value={month}>{month}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          }\r\n          <label>\r\n            Name:\r\n            <input\r\n              name=\"taskName\"\r\n              value={this.props.form.taskName}\r\n              maxLength={30}\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Add Time\r\n            <input type=\"checkbox\" onChange={this.toggleTimeVisible}></input>\r\n          </label>\r\n          {this.state.timeFormVisible && (\r\n            <label>\r\n              Start time:\r\n              <input\r\n                name=\"startTime\"\r\n                type=\"time\"\r\n                onChange={this.handleChange}\r\n              ></input>\r\n            </label>\r\n          )}\r\n          {this.state.timeFormVisible && (\r\n            <label>\r\n              End time:\r\n              <input\r\n                name=\"endTime\"\r\n                type=\"time\"\r\n                onChange={this.handleChange}\r\n              ></input>\r\n            </label>\r\n          )}\r\n          <label style={{ fontSize: \"20px\" }}>\r\n            Day:\r\n            <select\r\n              name=\"day\"\r\n              value={this.props.form.day}\r\n              style={{ fontSize: \"20px\" }}\r\n              onChange={this.handleChange}\r\n            >\r\n              {this.props.days.map((day) => (\r\n                <option value={day}>{day}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Priority:\r\n            <select\r\n              name=\"priority\"\r\n              value={this.props.form.priority}\r\n              style={{ fontSize: \"20px\" }}\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=\"Normal\">Normal</option>\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"High\">High</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Description:\r\n            <textarea name=\"description\" onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            <input\r\n              style={{ width: \"100px\", textAlign: \"center\", fontSize: \"20px\" }}\r\n              type=\"Submit\"\r\n            ></input>\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormComponent;\r\n","import React, { Component } from 'react'\r\n\r\nexport class TaskInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1><u>{this.props.info.taskName}</u></h1>\r\n        <h2>Priority: {this.props.info.priority}</h2>\r\n        <h2>Description</h2>\r\n        <p>{this.props.info.description}</p>\r\n        <button className=\"taskButton delete\" style={{fontSize: '30px'}} onClick={this.props.handleDelete.bind(this, this.props.info.id)}>Delete Task</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskInfo\r\n","import React, { Component } from 'react'\r\nimport './Css/FormComponent.css'\r\n\r\nexport class UpdateInfo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange = (event) => {\r\n        this.props.onFormChange(event.target.name, event.target.value);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.props.onUpdateSubmit();\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n  render() {\r\n    return (\r\n        \r\n      <div className='formContainer' onSubmit={this.handleSubmit}>\r\n        <form>\r\n            <h3>Month: {this.props.monthName}</h3>\r\n            <label>\r\n                Task Name:\r\n                <input name=\"taskName\" value={this.props.info.taskName} maxLength={30} type=\"text\" onChange={this.handleChange}></input>\r\n            </label>\r\n            \r\n            <label style={{fontSize: '20px'}}>\r\n                Day:\r\n                <select name=\"day\" value={this.props.info.day} style={{fontSize: '20px'}} onChange={this.handleChange}>\r\n                    {this.props.days.map((day) => (\r\n                        <option value={day}>{day}</option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n            <label>\r\n            Priority:\r\n                <select name='priority' value={this.props.info.priority} style={{fontSize: '20px'}} onChange={this.handleChange}>\r\n                    <option value='Normal'>Normal</option>\r\n                    <option value='Low'>Low</option>\r\n                    <option value='High'>High</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                Description:\r\n                <textarea name='description' value={this.props.info.description} onChange={this.handleChange}/>\r\n            </label>\r\n            <label>\r\n             <input style={{width:'100px', textAlign:'center', fontSize: '20px'}} type='submit' value=\"Update\"></input>\r\n            </label>\r\n            \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateInfo\r\n","import React, { Component } from \"react\";\r\nimport \"./Css/CalenderBase.css\";\r\nimport CalenderItem from \"./CalenderItem\";\r\nimport FormComponent from \"./FormComponent\";\r\nimport TaskInfo from \"./TaskInfo\";\r\nimport UpdateInfo from \"./UpdateInfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport class CalenderBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateChange = this.updateChange.bind(this);\r\n    this.updateSubmit = this.updateSubmit.bind(this);\r\n  }\r\n\r\n  state = {\r\n    form: {\r\n      taskName: \"\",\r\n      month: this.props.month.monthName,\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      day: 1,\r\n      priority: \"Normal\",\r\n      description: \"\",\r\n    },\r\n    hidden: {\r\n      formHidden: true,\r\n      taskInfoHidden: true,\r\n      updateInfoHidden: true,\r\n    },\r\n    info: {\r\n      id: \"\",\r\n      taskName: \"\",\r\n      month: \"\",\r\n      day: 1,\r\n      priority: \"\",\r\n      description: \"\",\r\n    },\r\n  };\r\n\r\n  updateChange = (name, value) => {\r\n    var newState = this.state;\r\n    switch (name) {\r\n      case \"month\":\r\n        newState.form.month = value;\r\n        break;\r\n      case \"taskName\":\r\n        newState.form.taskName = value;\r\n        break;\r\n      case \"day\":\r\n        newState.form.day = parseInt(value);\r\n        break;\r\n      case \"priority\":\r\n        newState.form.priority = value;\r\n        break;\r\n      case \"description\":\r\n        console.log(\"Updating description\");\r\n        newState.form.description = value;\r\n        break;\r\n      case \"startTime\":\r\n        newState.form.startTime = value;\r\n        console.log(\"Start Time: \" + value);\r\n        break;\r\n      case \"endTime\":\r\n        newState.form.endTime = value;\r\n        console.log(\"End Time: \" + value);\r\n        break;\r\n      default:\r\n        console.log(\"Error with switch case, got\" + value);\r\n        break;\r\n    }\r\n    this.setState({ newState });\r\n  };\r\n\r\n  addTask = () => {\r\n    this.props.addTask(this.state.form);\r\n   // this.resetForm();\r\n    this.toggleOff();\r\n  };\r\n\r\n  resetForm = () => {\r\n    var newState = this.state;\r\n    newState.form.taskName = \"\";\r\n    newState.form.startTime = \"\";\r\n    newState.form.endTime = \"\";\r\n    newState.form.day = 1;\r\n    newState.form.priority = \"Normal\";\r\n    newState.form.description = \"\";\r\n    this.setState({newState});\r\n  }\r\n\r\n  //Shows form after button is pressed\r\n  toggleForm = () => {\r\n    var newState = this.state;\r\n\r\n    newState.hidden.formHidden = !newState.hidden.formHidden;\r\n    newState.hidden.taskInfoHidden = true;\r\n    newState.hidden.updateInfoHidden = true;\r\n    this.setState({ newState });\r\n  };\r\n\r\n  toggleInfo = (id, name, day, priority, description) => {\r\n    console.log(\"Info:\" + id + \", \"  + name + \", \"  + day + \", \"  + priority + \", \"  + description + \", \");\r\n    var newState = this.state;\r\n    newState.info.id = id;\r\n    newState.info.taskName = name;\r\n    newState.info.day = day;\r\n    newState.info.priority = priority;\r\n    newState.info.description = description;\r\n    newState.hidden.formHidden = true;\r\n    newState.hidden.updateInfoHidden = true;\r\n    newState.hidden.taskInfoHidden = false;\r\n    this.setState({ newState });\r\n  };\r\n\r\n  toggleOff = () => {\r\n    var newState = this.state;\r\n    newState.hidden.formHidden = true;\r\n    newState.hidden.taskInfoHidden = true;\r\n    newState.hidden.updateInfoHidden = true;\r\n    this.setState(newState);\r\n  };\r\n\r\n  //Gets the tasks for a certain day\r\n  getDayTasks = (id) => {\r\n    var dayTasks = [];\r\n    for (var i = 0; i < this.props.month.tasks.length; i++) {\r\n      if (this.props.month.tasks[i].day !== \"\") {\r\n        if (parseInt(id) === this.props.month.tasks[i].day) {\r\n          dayTasks.push(this.props.month.tasks[i]);\r\n        }\r\n      }\r\n    }\r\n    return dayTasks;\r\n  };\r\n\r\n  //Removes days from list that arent part of that month\r\n  removeEmptyDays = (days) => {\r\n    var newArray = [];\r\n    for (var i = 0; i < days.length; i++) {\r\n      if (days[i] !== \"\") {\r\n        newArray.push(days[i]);\r\n      }\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  //Creates calender month depending on which month and year it is\r\n  createTableRows = () => {\r\n    var today = new Date();\r\n    var rows = [];\r\n    for (var i = 0; i < 6; i++) {\r\n      var days = [];\r\n\r\n      for (var j = 0; j < 7; j++) {\r\n        var day = i * 7 + j;\r\n        var name = \"calenderItem\";\r\n        if (day === 0 || day % 7 === 0) {\r\n          name = name + \" left\";\r\n        }\r\n        if (day > 34) {\r\n          name = name + \" bot\";\r\n        }\r\n\r\n        if (\r\n          today.getMonth() === this.props.month.id - 1 &&\r\n          today.getDate() === parseInt(this.props.month.days[day])\r\n        ) {\r\n          days.push(\r\n            <div\r\n              className={name}\r\n              style={{ backgroundColor: \"lightblue\" }}\r\n              data-date={this.props.month.days[day]}\r\n            >\r\n              <CalenderItem\r\n                tasks={this.getDayTasks(this.props.month.days[day])}\r\n                handleClick={this.toggleInfo}\r\n              />\r\n            </div>\r\n          );\r\n        } else {\r\n          days.push(\r\n            <div className={name} data-date={this.props.month.days[day]}>\r\n              <CalenderItem\r\n                tasks={this.getDayTasks(this.props.month.days[day])}\r\n                handleClick={this.toggleInfo}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      rows.push(<div className=\"Rows rowBottom\">{days}</div>);\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  // taskUpdate = () => {\r\n  //   var newState = this.state;\r\n  //   newState.form.taskName = newState.info.taskName;\r\n  //   newState.form.day = newState.info.day;\r\n  //   newState.form.priority = newState.info.priority;\r\n  //   newState.form.description = newState.info.description;\r\n  //   console.log(\r\n  //     newState.form.taskName +\r\n  //       \", \" +\r\n  //       newState.form.day +\r\n  //       \", \" +\r\n  //       newState.form.priority +\r\n  //       \", \" +\r\n  //       newState.form.description\r\n  //   );\r\n  //   newState.hidden.formHidden = true;\r\n  //   newState.hidden.taskInfoHidden = true;\r\n  //   newState.hidden.updateInfoHidden = false;\r\n  //   this.setState({ newState });\r\n  // };\r\n\r\n  taskDelete = (id) => {\r\n    this.props.taskDelete(id);\r\n    this.toggleOff();\r\n  };\r\n\r\n  updateSubmit = () => {\r\n    this.props.updateTask(this.state.info.id, this.state.form);\r\n    this.toggleOff();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calenderContainer\">\r\n        <div className=\"calender\">\r\n          <div className=\"CalenderHeader\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"HeaderItem\"\r\n              onClick={this.props.changeMonth.bind(\r\n                this,\r\n                this.props.month.id,\r\n                \"back\"\r\n              )}\r\n              style={{\r\n                paddingTop: \"25px\",\r\n                textDecoration: \"none\",\r\n                fontSize: \"30px\",\r\n              }}\r\n            >\r\n              {\"<\"}\r\n            </Link>\r\n\r\n            <div className=\"HeaderItem\" style={{ textAlign: \"center\" }}>\r\n              <h1 className=\"HeaderItem\">{this.props.month.monthName}</h1>\r\n              <h3>{new Date().getFullYear()}</h3>\r\n            </div>\r\n\r\n            <Link\r\n              to=\"/\"\r\n              className=\"HeaderItem\"\r\n              onClick={this.props.changeMonth.bind(\r\n                this,\r\n                this.props.month.id,\r\n                \"next\"\r\n              )}\r\n              style={{\r\n                paddingTop: \"25px\",\r\n                textDecoration: \"none\",\r\n                fontSize: \"30px\",\r\n              }}\r\n            >\r\n              {\">\"}\r\n            </Link>\r\n          </div>\r\n          <div className=\"calenderBottom\">\r\n            <div className=\"Table\">\r\n              <div className=\"Rows\">\r\n                <div className=\"rowHeader left\">Sunday</div>\r\n                <div className=\"rowHeader\">Monday</div>\r\n                <div className=\"rowHeader\">Tuesday</div>\r\n                <div className=\"rowHeader\">Wednesday</div>\r\n                <div className=\"rowHeader\">Thursday</div>\r\n                <div className=\"rowHeader\">Friday</div>\r\n                <div className=\"rowHeader\">Saturday</div>\r\n              </div>\r\n\r\n              {this.createTableRows()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"addingItem\">\r\n          <div className=\"addingTop\">\r\n            <Button\r\n              style={{ height: \"inherit\", width: \"inherit\", fontSize: \"20px\" }}\r\n              onClick={this.toggleForm}\r\n            >\r\n              Add Event\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"addingBot\">\r\n            <div className=\"formTab\">\r\n              {!this.state.hidden.formHidden && (\r\n                <FormComponent\r\n                  monthName={this.props.month.monthName}\r\n                  months={this.props.months}\r\n                  days={this.removeEmptyDays(this.props.month.days)}\r\n                  form={this.state.form}\r\n                  onFormChange={this.updateChange}\r\n                  onFormSubmit={this.addTask}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"InfoTab\">\r\n              {!this.state.hidden.taskInfoHidden && (\r\n                <TaskInfo\r\n                  info={this.state.info}\r\n                  handleDelete={this.taskDelete}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"UpdateTab\">\r\n              {!this.state.hidden.updateInfoHidden && (\r\n                <UpdateInfo\r\n                  monthName={this.props.month.monthName}\r\n                  months={this.props.months}\r\n                  days={this.removeEmptyDays(this.props.month.days)}\r\n                  id={this.state.info.id}\r\n                  info={this.state.form}\r\n                  onFormChange={this.updateChange}\r\n                  onUpdateSubmit={this.updateSubmit}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalenderBase;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Header from \"./Components/Layout/Header\";\r\nimport CalenderBase from \"./Components/CalenderBase\";\r\nconst axios = require(\"axios\");\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n      months: [],\r\n      current: {},\r\n      test: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.createCalender();\r\n    this.state.current = this.state.months[new Date().getMonth()];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabTasks();\r\n  }\r\n  //Sets up local state calender based on the year and how the calender should be structured.\r\n  createCalender = () => {\r\n    var newState = this.state;\r\n    var year = new Date().getFullYear();\r\n    for(var i = 0; i < 12; i++){\r\n\r\n      var dayCount = 1;\r\n      var days = []\r\n      \r\n      var firstDay = new Date(year, i, 1).getDay();\r\n      var lastDay = new Date(year, i+1, 0).getDate();\r\n      for(var j = 0; j < 42; j++){\r\n\r\n        if(j >=firstDay && dayCount <= lastDay){ \r\n          days.push(dayCount.toString());\r\n          dayCount++;\r\n        }\r\n        else{\r\n          days.push(\"\");\r\n        }\r\n      }\r\n      console.log(days);\r\n      newState.months[i] = {\r\n        id: i + 1,\r\n        monthName: this.state.monthNames[i],\r\n        days: days,\r\n        tasks: []\r\n      }\r\n    }\r\n    this.setState({newState});\r\n  }\r\n\r\n  //Grabs existing tasks from database and adds them to the local visual list of events while avoiding duplicates fropm showing.\r\n  grabTasks = () => {\r\n    \r\n    fetch(\"https://calender-client.herokuapp.com/users\")\r\n      .then((responce) => responce.json())\r\n      .then((result) => {\r\n        var newState = this.state;\r\n        var idList = [];\r\n        console.log(result); //What i need to change to to get the right inormation;\r\n        for(var a = 0; a < result.recordset.length; a++) {\r\n          var date = this.separateDate(result.recordset[a].date);\r\n          for (var i = 0; i < this.state.months.length; i++) {\r\n            if (date[1] === this.state.months[i].id) {\r\n              for (var j = 0; j < this.state.months[i].tasks.length; j++) {\r\n                idList.push(this.state.months[i].tasks[j].id);\r\n              }\r\n              if (!idList.includes(result.recordset[a].eventId)) {\r\n                newState.months[i].tasks.push({\r\n                  id: result.recordset[a].eventId,\r\n                  year: date[0],\r\n                  month: date[1],\r\n                  day: date[2],\r\n                  startTime: result.recordset[a].startTime,\r\n                  endTime: result.recordset[a].endTime,\r\n                  name: result.recordset[a].eventName,\r\n                  priority: result.recordset[a].priority,\r\n                  description: result.recordset[a].eventDescription,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        };\r\n        newState.current = this.state.months[new Date().getMonth()];\r\n        this.setState({ newState });\r\n      });\r\n  };\r\n\r\n  setCurrentMonth = () => {\r\n    var date = new Date().getMonth();\r\n\r\n    for (var i = 0; i < this.state.months.length; i++) {\r\n      if (this.state.months[i].id === date + 1) {\r\n        var newState = this.state;\r\n        newState.current = this.state.months[i];\r\n        this.setState({ newState });\r\n      }\r\n    }\r\n  };\r\n\r\n  //removes unneeded part of date and splits up year month and day.\r\n  separateDate = (date) => {\r\n    var date1 = new Date(date);\r\n\r\n    var values = [date1.getFullYear(), date1.getMonth() + 1, date1.getDate()];\r\n    return values;\r\n  };\r\n\r\n  //Changes the visible month when the directional buttons are pressed\r\n  changeMonth = (current, direction) => {\r\n    for (var index = 0; index < this.state.months.length; index++) {\r\n      if (this.state.months[index].id === Number(current)) {\r\n        var location = this.state.months[index].id;\r\n        var next = null;\r\n        switch (direction) {\r\n          case \"next\":\r\n            if (location === 12) {\r\n              next = 1;\r\n            } else {\r\n              next = location + 1;\r\n            }\r\n            break;\r\n          case \"back\":\r\n            if (location === 1) {\r\n              next = 12;\r\n            } else {\r\n              next = location - 1;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n          current: this.state.months[next - 1],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //Adds task to the database and then regrabs the task\r\n  addTask = (taskInfo) => {\r\n\r\n    var data = {\r\n      name: taskInfo.taskName,\r\n      startTime: this.checkTime(taskInfo.startTime),\r\n      endTime: this.checkTime(taskInfo.endTime),\r\n      date: this.combineDate(taskInfo.day, taskInfo.month),\r\n      priority: taskInfo.priority,\r\n      description: taskInfo.description,\r\n    };\r\n    console.log(data);\r\n    if(data.startTime === \"NULL\"){\r\n      fetch(\"https://calender-client.herokuapp.com/users/addTaskWithoutTime\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n    .then(function (response) {\r\n      if (response.status >= 400) {\r\n        throw new Error(response.text);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(function (data) {\r\n      console.log(data);\r\n      if (data === \"success\") {\r\n        console.log(\"Item has been added\");\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n    }\r\n\r\n    else{\r\n      fetch(\"https://calender-client.herokuapp.com/users/addTaskWithTime\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      })\r\n      .then(function (response) {\r\n        if (response.status >= 400) {\r\n          throw new Error(response.text);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        console.log(data);\r\n        if (data === \"success\") {\r\n          console.log(\"Item has been added\");\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n      \r\n\r\n    this.grabTasks();\r\n\r\n    // var month = this.state.current.id-1;\r\n    // var newState = this.state;\r\n    //     newState.months[month].tasks.push({\r\n    //       id: uuidv4(),\r\n    //       day: parseInt(taskInfo.day),\r\n    //       name: taskInfo.taskName,\r\n    //       priority: taskInfo.priority,\r\n    //       description: taskInfo.description\r\n    //     });\r\n\r\n    //     this.setState({newState});\r\n    //     console.log(\"only Reaching back here\");\r\n  };\r\n\r\n  //Changes time string to proper formatting for database.\r\n  checkTime = (time) => {\r\n    if (time === \"\") {\r\n      return \"NULL\";\r\n    } else {\r\n      return time + \":00\";\r\n    }\r\n  };\r\n\r\n  //Combines day month and year into date format for database.\r\n  combineDate = (day, month) => {\r\n    var dayString = day.toString();\r\n    if (dayString.length === 1) {\r\n      dayString = \"0\" + dayString;\r\n    }\r\n    var temp = \"2020-\" + this.numberMonth(month) + \"-\" + dayString;\r\n    return temp;\r\n  };\r\n\r\n  //Returns month number from month name\r\n  numberMonth = (month) => {\r\n    console.log(month);\r\n    for (var j = 0; j <= this.state.months.length; j++) {\r\n      if (this.state.months[j].monthName === month) {\r\n        var temp = this.state.months[j].id.toString();\r\n        if (temp.length === 1) {\r\n          return \"0\" + temp;\r\n        } else {\r\n          return temp;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Updates current event (Not implemented into database yet).\r\n  updateTask = (id, info) => {\r\n    var month = this.state.current.id - 1;\r\n    var newState = this.state;\r\n    for (var i = 0; i < newState.months[month].tasks.length; i++) {\r\n      if (newState.months[month].tasks[i].id === id) {\r\n        newState.months[month].tasks[i].name = info.taskName;\r\n        newState.months[month].tasks[i].day = info.day;\r\n        newState.months[month].tasks[i].priority = info.priority;\r\n        newState.months[month].tasks[i].description = info.description;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ newState });\r\n  };\r\n\r\n  //Deletes the event from the client side (Doesnt remove from database)\r\n  taskDelete = (id) => {\r\n    var data = {\r\n      id: id\r\n    }\r\n    fetch(\"https://calender-client.herokuapp.com/users/deleteTaskById\", {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n    .then(function (response) {\r\n      if (response.status >= 400) {\r\n        throw new Error(response.text);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(function (data) {\r\n      console.log(data);\r\n      if (data === \"success\") {\r\n        console.log(\"Item has been added\");\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n\r\n    var month = this.state.current.id - 1;\r\n    var newState = this.state;\r\n    for (var i = 0; i < newState.months[month].tasks.length; i++) {\r\n      if (newState.months[month].tasks[i].id === id) {\r\n        newState.months[month].tasks.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ newState });\r\n  };\r\n\r\n  getMonths = () => {\r\n    var months = [];\r\n    for (var i = 0; i < this.state.months.length; i++) {\r\n      months.push(this.state.months[i].monthName);\r\n    }\r\n    return months;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <CalenderBase\r\n            id=\"calender\"\r\n            month={this.state.current}\r\n            months={this.getMonths}\r\n            changeMonth={this.changeMonth}\r\n            addTask={this.addTask}\r\n            updateTask={this.updateTask}\r\n            taskDelete={this.taskDelete}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}